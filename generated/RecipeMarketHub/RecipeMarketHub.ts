// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class APOfferCancelled extends ethereum.Event {
  get params(): APOfferCancelled__Params {
    return new APOfferCancelled__Params(this);
  }
}

export class APOfferCancelled__Params {
  _event: APOfferCancelled;

  constructor(event: APOfferCancelled) {
    this._event = event;
  }

  get offerID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class APOfferCreated extends ethereum.Event {
  get params(): APOfferCreated__Params {
    return new APOfferCreated__Params(this);
  }
}

export class APOfferCreated__Params {
  _event: APOfferCreated;

  constructor(event: APOfferCreated) {
    this._event = event;
  }

  get offerID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get marketHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get fundingVault(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get quantity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get incentiveAddresses(): Array<Address> {
    return this._event.parameters[4].value.toAddressArray();
  }

  get incentiveAmounts(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }

  get expiry(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class APOfferFilled extends ethereum.Event {
  get params(): APOfferFilled__Params {
    return new APOfferFilled__Params(this);
  }
}

export class APOfferFilled__Params {
  _event: APOfferFilled;

  constructor(event: APOfferFilled) {
    this._event = event;
  }

  get offerID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fillAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get weirollWallet(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get incentiveAmounts(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get protocolFeeAmounts(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get frontendFeeAmounts(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }
}

export class FeesClaimed extends ethereum.Event {
  get params(): FeesClaimed__Params {
    return new FeesClaimed__Params(this);
  }
}

export class FeesClaimed__Params {
  _event: FeesClaimed;

  constructor(event: FeesClaimed) {
    this._event = event;
  }

  get claimant(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get incentive(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class IPOfferCancelled extends ethereum.Event {
  get params(): IPOfferCancelled__Params {
    return new IPOfferCancelled__Params(this);
  }
}

export class IPOfferCancelled__Params {
  _event: IPOfferCancelled;

  constructor(event: IPOfferCancelled) {
    this._event = event;
  }

  get offerHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class IPOfferCreated extends ethereum.Event {
  get params(): IPOfferCreated__Params {
    return new IPOfferCreated__Params(this);
  }
}

export class IPOfferCreated__Params {
  _event: IPOfferCreated;

  constructor(event: IPOfferCreated) {
    this._event = event;
  }

  get offerID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get offerHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get marketHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get quantity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get incentivesOffered(): Array<Address> {
    return this._event.parameters[4].value.toAddressArray();
  }

  get incentiveAmounts(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }

  get protocolFeeAmounts(): Array<BigInt> {
    return this._event.parameters[6].value.toBigIntArray();
  }

  get frontendFeeAmounts(): Array<BigInt> {
    return this._event.parameters[7].value.toBigIntArray();
  }

  get expiry(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class IPOfferFilled extends ethereum.Event {
  get params(): IPOfferFilled__Params {
    return new IPOfferFilled__Params(this);
  }
}

export class IPOfferFilled__Params {
  _event: IPOfferFilled;

  constructor(event: IPOfferFilled) {
    this._event = event;
  }

  get offerHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get fillAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get weirollWallet(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get incentiveAmounts(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get protocolFeeAmounts(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get frontendFeeAmounts(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }
}

export class MarketCreated extends ethereum.Event {
  get params(): MarketCreated__Params {
    return new MarketCreated__Params(this);
  }
}

export class MarketCreated__Params {
  _event: MarketCreated;

  constructor(event: MarketCreated) {
    this._event = event;
  }

  get marketID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get marketHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get inputToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get lockupTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get frontendFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get rewardStyle(): i32 {
    return this._event.parameters[5].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WeirollWalletClaimedIncentive extends ethereum.Event {
  get params(): WeirollWalletClaimedIncentive__Params {
    return new WeirollWalletClaimedIncentive__Params(this);
  }
}

export class WeirollWalletClaimedIncentive__Params {
  _event: WeirollWalletClaimedIncentive;

  constructor(event: WeirollWalletClaimedIncentive) {
    this._event = event;
  }

  get weirollWallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get incentive(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class WeirollWalletExecutedWithdrawal extends ethereum.Event {
  get params(): WeirollWalletExecutedWithdrawal__Params {
    return new WeirollWalletExecutedWithdrawal__Params(this);
  }
}

export class WeirollWalletExecutedWithdrawal__Params {
  _event: WeirollWalletExecutedWithdrawal;

  constructor(event: WeirollWalletExecutedWithdrawal) {
    this._event = event;
  }

  get weirollWallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WeirollWalletForfeited extends ethereum.Event {
  get params(): WeirollWalletForfeited__Params {
    return new WeirollWalletForfeited__Params(this);
  }
}

export class WeirollWalletForfeited__Params {
  _event: WeirollWalletForfeited;

  constructor(event: WeirollWalletForfeited) {
    this._event = event;
  }

  get weirollWallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RecipeMarketHub__getAPOfferHashInputOfferStruct extends ethereum.Tuple {
  get offerID(): BigInt {
    return this[0].toBigInt();
  }

  get targetMarketHash(): Bytes {
    return this[1].toBytes();
  }

  get ap(): Address {
    return this[2].toAddress();
  }

  get fundingVault(): Address {
    return this[3].toAddress();
  }

  get quantity(): BigInt {
    return this[4].toBigInt();
  }

  get expiry(): BigInt {
    return this[5].toBigInt();
  }

  get incentivesRequested(): Array<Address> {
    return this[6].toAddressArray();
  }

  get incentiveAmountsRequested(): Array<BigInt> {
    return this[7].toBigIntArray();
  }
}

export class RecipeMarketHub__getMarketHashInputMarketStruct extends ethereum.Tuple {
  get marketID(): BigInt {
    return this[0].toBigInt();
  }

  get inputToken(): Address {
    return this[1].toAddress();
  }

  get lockupTime(): BigInt {
    return this[2].toBigInt();
  }

  get frontendFee(): BigInt {
    return this[3].toBigInt();
  }

  get depositRecipe(): RecipeMarketHub__getMarketHashInputMarketDepositRecipeStruct {
    return changetype<RecipeMarketHub__getMarketHashInputMarketDepositRecipeStruct>(
      this[4].toTuple(),
    );
  }

  get withdrawRecipe(): RecipeMarketHub__getMarketHashInputMarketWithdrawRecipeStruct {
    return changetype<RecipeMarketHub__getMarketHashInputMarketWithdrawRecipeStruct>(
      this[5].toTuple(),
    );
  }

  get rewardStyle(): i32 {
    return this[6].toI32();
  }
}

export class RecipeMarketHub__getMarketHashInputMarketDepositRecipeStruct extends ethereum.Tuple {
  get weirollCommands(): Array<Bytes> {
    return this[0].toBytesArray();
  }

  get weirollState(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class RecipeMarketHub__getMarketHashInputMarketWithdrawRecipeStruct extends ethereum.Tuple {
  get weirollCommands(): Array<Bytes> {
    return this[0].toBytesArray();
  }

  get weirollState(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class RecipeMarketHub__marketHashToWeirollMarketResultDepositRecipeStruct extends ethereum.Tuple {
  get weirollCommands(): Array<Bytes> {
    return this[0].toBytesArray();
  }

  get weirollState(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class RecipeMarketHub__marketHashToWeirollMarketResultWithdrawRecipeStruct extends ethereum.Tuple {
  get weirollCommands(): Array<Bytes> {
    return this[0].toBytesArray();
  }

  get weirollState(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class RecipeMarketHub__marketHashToWeirollMarketResult {
  value0: BigInt;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: RecipeMarketHub__marketHashToWeirollMarketResultDepositRecipeStruct;
  value5: RecipeMarketHub__marketHashToWeirollMarketResultWithdrawRecipeStruct;
  value6: i32;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: RecipeMarketHub__marketHashToWeirollMarketResultDepositRecipeStruct,
    value5: RecipeMarketHub__marketHashToWeirollMarketResultWithdrawRecipeStruct,
    value6: i32,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromTuple(this.value4));
    map.set("value5", ethereum.Value.fromTuple(this.value5));
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6)),
    );
    return map;
  }

  getMarketID(): BigInt {
    return this.value0;
  }

  getInputToken(): Address {
    return this.value1;
  }

  getLockupTime(): BigInt {
    return this.value2;
  }

  getFrontendFee(): BigInt {
    return this.value3;
  }

  getDepositRecipe(): RecipeMarketHub__marketHashToWeirollMarketResultDepositRecipeStruct {
    return this.value4;
  }

  getWithdrawRecipe(): RecipeMarketHub__marketHashToWeirollMarketResultWithdrawRecipeStruct {
    return this.value5;
  }

  getRewardStyle(): i32 {
    return this.value6;
  }
}

export class RecipeMarketHub__offerHashToIPOfferResult {
  value0: BigInt;
  value1: Bytes;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: Bytes,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getOfferID(): BigInt {
    return this.value0;
  }

  getTargetMarketHash(): Bytes {
    return this.value1;
  }

  getIp(): Address {
    return this.value2;
  }

  getExpiry(): BigInt {
    return this.value3;
  }

  getQuantity(): BigInt {
    return this.value4;
  }

  getRemainingQuantity(): BigInt {
    return this.value5;
  }
}

export class RecipeMarketHub__weirollWalletToLockedIncentivesParamsResult {
  value0: Address;
  value1: Address;
  value2: boolean;
  value3: Bytes;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: boolean,
    value3: Bytes,
    value4: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromFixedBytes(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getIp(): Address {
    return this.value0;
  }

  getFrontendFeeRecipient(): Address {
    return this.value1;
  }

  getWasIPOffer(): boolean {
    return this.value2;
  }

  getOfferHash(): Bytes {
    return this.value3;
  }

  getProtocolFeeAtFill(): BigInt {
    return this.value4;
  }
}

export class RecipeMarketHub extends ethereum.SmartContract {
  static bind(address: Address): RecipeMarketHub {
    return new RecipeMarketHub("RecipeMarketHub", address);
  }

  MIN_FILL_PERCENT(): BigInt {
    let result = super.call(
      "MIN_FILL_PERCENT",
      "MIN_FILL_PERCENT():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MIN_FILL_PERCENT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_FILL_PERCENT",
      "MIN_FILL_PERCENT():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  POINTS_FACTORY(): Address {
    let result = super.call("POINTS_FACTORY", "POINTS_FACTORY():(address)", []);

    return result[0].toAddress();
  }

  try_POINTS_FACTORY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "POINTS_FACTORY",
      "POINTS_FACTORY():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  WEIROLL_WALLET_IMPLEMENTATION(): Address {
    let result = super.call(
      "WEIROLL_WALLET_IMPLEMENTATION",
      "WEIROLL_WALLET_IMPLEMENTATION():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_WEIROLL_WALLET_IMPLEMENTATION(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "WEIROLL_WALLET_IMPLEMENTATION",
      "WEIROLL_WALLET_IMPLEMENTATION():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeClaimantToTokenToAmount(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "feeClaimantToTokenToAmount",
      "feeClaimantToTokenToAmount(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)],
    );

    return result[0].toBigInt();
  }

  try_feeClaimantToTokenToAmount(
    param0: Address,
    param1: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feeClaimantToTokenToAmount",
      "feeClaimantToTokenToAmount(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAPOfferHash(
    offer: RecipeMarketHub__getAPOfferHashInputOfferStruct,
  ): Bytes {
    let result = super.call(
      "getAPOfferHash",
      "getAPOfferHash((uint256,bytes32,address,address,uint256,uint256,address[],uint256[])):(bytes32)",
      [ethereum.Value.fromTuple(offer)],
    );

    return result[0].toBytes();
  }

  try_getAPOfferHash(
    offer: RecipeMarketHub__getAPOfferHashInputOfferStruct,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getAPOfferHash",
      "getAPOfferHash((uint256,bytes32,address,address,uint256,uint256,address[],uint256[])):(bytes32)",
      [ethereum.Value.fromTuple(offer)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getIPOfferHash(
    offerID: BigInt,
    targetMarketHash: Bytes,
    ip: Address,
    expiry: BigInt,
    quantity: BigInt,
    incentivesOffered: Array<Address>,
    incentiveAmountsOffered: Array<BigInt>,
  ): Bytes {
    let result = super.call(
      "getIPOfferHash",
      "getIPOfferHash(uint256,bytes32,address,uint256,uint256,address[],uint256[]):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(offerID),
        ethereum.Value.fromFixedBytes(targetMarketHash),
        ethereum.Value.fromAddress(ip),
        ethereum.Value.fromUnsignedBigInt(expiry),
        ethereum.Value.fromUnsignedBigInt(quantity),
        ethereum.Value.fromAddressArray(incentivesOffered),
        ethereum.Value.fromUnsignedBigIntArray(incentiveAmountsOffered),
      ],
    );

    return result[0].toBytes();
  }

  try_getIPOfferHash(
    offerID: BigInt,
    targetMarketHash: Bytes,
    ip: Address,
    expiry: BigInt,
    quantity: BigInt,
    incentivesOffered: Array<Address>,
    incentiveAmountsOffered: Array<BigInt>,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getIPOfferHash",
      "getIPOfferHash(uint256,bytes32,address,uint256,uint256,address[],uint256[]):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(offerID),
        ethereum.Value.fromFixedBytes(targetMarketHash),
        ethereum.Value.fromAddress(ip),
        ethereum.Value.fromUnsignedBigInt(expiry),
        ethereum.Value.fromUnsignedBigInt(quantity),
        ethereum.Value.fromAddressArray(incentivesOffered),
        ethereum.Value.fromUnsignedBigIntArray(incentiveAmountsOffered),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getMarketHash(
    market: RecipeMarketHub__getMarketHashInputMarketStruct,
  ): Bytes {
    let result = super.call(
      "getMarketHash",
      "getMarketHash((uint256,address,uint256,uint256,(bytes32[],bytes[]),(bytes32[],bytes[]),uint8)):(bytes32)",
      [ethereum.Value.fromTuple(market)],
    );

    return result[0].toBytes();
  }

  try_getMarketHash(
    market: RecipeMarketHub__getMarketHashInputMarketStruct,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getMarketHash",
      "getMarketHash((uint256,address,uint256,uint256,(bytes32[],bytes[]),(bytes32[],bytes[]),uint8)):(bytes32)",
      [ethereum.Value.fromTuple(market)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  marketHashToWeirollMarket(
    param0: Bytes,
  ): RecipeMarketHub__marketHashToWeirollMarketResult {
    let result = super.call(
      "marketHashToWeirollMarket",
      "marketHashToWeirollMarket(bytes32):(uint256,address,uint256,uint256,(bytes32[],bytes[]),(bytes32[],bytes[]),uint8)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new RecipeMarketHub__marketHashToWeirollMarketResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      changetype<RecipeMarketHub__marketHashToWeirollMarketResultDepositRecipeStruct>(
        result[4].toTuple(),
      ),
      changetype<RecipeMarketHub__marketHashToWeirollMarketResultWithdrawRecipeStruct>(
        result[5].toTuple(),
      ),
      result[6].toI32(),
    );
  }

  try_marketHashToWeirollMarket(
    param0: Bytes,
  ): ethereum.CallResult<RecipeMarketHub__marketHashToWeirollMarketResult> {
    let result = super.tryCall(
      "marketHashToWeirollMarket",
      "marketHashToWeirollMarket(bytes32):(uint256,address,uint256,uint256,(bytes32[],bytes[]),(bytes32[],bytes[]),uint8)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RecipeMarketHub__marketHashToWeirollMarketResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        changetype<RecipeMarketHub__marketHashToWeirollMarketResultDepositRecipeStruct>(
          value[4].toTuple(),
        ),
        changetype<RecipeMarketHub__marketHashToWeirollMarketResultWithdrawRecipeStruct>(
          value[5].toTuple(),
        ),
        value[6].toI32(),
      ),
    );
  }

  minimumFrontendFee(): BigInt {
    let result = super.call(
      "minimumFrontendFee",
      "minimumFrontendFee():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minimumFrontendFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minimumFrontendFee",
      "minimumFrontendFee():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numAPOffers(): BigInt {
    let result = super.call("numAPOffers", "numAPOffers():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numAPOffers(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numAPOffers", "numAPOffers():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numIPOffers(): BigInt {
    let result = super.call("numIPOffers", "numIPOffers():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numIPOffers(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numIPOffers", "numIPOffers():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numMarkets(): BigInt {
    let result = super.call("numMarkets", "numMarkets():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numMarkets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numMarkets", "numMarkets():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  offerHashToIPOffer(param0: Bytes): RecipeMarketHub__offerHashToIPOfferResult {
    let result = super.call(
      "offerHashToIPOffer",
      "offerHashToIPOffer(bytes32):(uint256,bytes32,address,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new RecipeMarketHub__offerHashToIPOfferResult(
      result[0].toBigInt(),
      result[1].toBytes(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
    );
  }

  try_offerHashToIPOffer(
    param0: Bytes,
  ): ethereum.CallResult<RecipeMarketHub__offerHashToIPOfferResult> {
    let result = super.tryCall(
      "offerHashToIPOffer",
      "offerHashToIPOffer(bytes32):(uint256,bytes32,address,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RecipeMarketHub__offerHashToIPOfferResult(
        value[0].toBigInt(),
        value[1].toBytes(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
      ),
    );
  }

  offerHashToRemainingQuantity(param0: Bytes): BigInt {
    let result = super.call(
      "offerHashToRemainingQuantity",
      "offerHashToRemainingQuantity(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return result[0].toBigInt();
  }

  try_offerHashToRemainingQuantity(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "offerHashToRemainingQuantity",
      "offerHashToRemainingQuantity(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFee(): BigInt {
    let result = super.call("protocolFee", "protocolFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_protocolFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("protocolFee", "protocolFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  protocolFeeClaimant(): Address {
    let result = super.call(
      "protocolFeeClaimant",
      "protocolFeeClaimant():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_protocolFeeClaimant(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "protocolFeeClaimant",
      "protocolFeeClaimant():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  weirollWalletToLockedIncentivesParams(
    param0: Address,
  ): RecipeMarketHub__weirollWalletToLockedIncentivesParamsResult {
    let result = super.call(
      "weirollWalletToLockedIncentivesParams",
      "weirollWalletToLockedIncentivesParams(address):(address,address,bool,bytes32,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new RecipeMarketHub__weirollWalletToLockedIncentivesParamsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBoolean(),
      result[3].toBytes(),
      result[4].toBigInt(),
    );
  }

  try_weirollWalletToLockedIncentivesParams(
    param0: Address,
  ): ethereum.CallResult<RecipeMarketHub__weirollWalletToLockedIncentivesParamsResult> {
    let result = super.tryCall(
      "weirollWalletToLockedIncentivesParams",
      "weirollWalletToLockedIncentivesParams(address):(address,address,bool,bytes32,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RecipeMarketHub__weirollWalletToLockedIncentivesParamsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBoolean(),
        value[3].toBytes(),
        value[4].toBigInt(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _weirollWalletImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _protocolFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minimumFrontendFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _pointsFactory(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelAPOfferCall extends ethereum.Call {
  get inputs(): CancelAPOfferCall__Inputs {
    return new CancelAPOfferCall__Inputs(this);
  }

  get outputs(): CancelAPOfferCall__Outputs {
    return new CancelAPOfferCall__Outputs(this);
  }
}

export class CancelAPOfferCall__Inputs {
  _call: CancelAPOfferCall;

  constructor(call: CancelAPOfferCall) {
    this._call = call;
  }

  get offer(): CancelAPOfferCallOfferStruct {
    return changetype<CancelAPOfferCallOfferStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class CancelAPOfferCall__Outputs {
  _call: CancelAPOfferCall;

  constructor(call: CancelAPOfferCall) {
    this._call = call;
  }
}

export class CancelAPOfferCallOfferStruct extends ethereum.Tuple {
  get offerID(): BigInt {
    return this[0].toBigInt();
  }

  get targetMarketHash(): Bytes {
    return this[1].toBytes();
  }

  get ap(): Address {
    return this[2].toAddress();
  }

  get fundingVault(): Address {
    return this[3].toAddress();
  }

  get quantity(): BigInt {
    return this[4].toBigInt();
  }

  get expiry(): BigInt {
    return this[5].toBigInt();
  }

  get incentivesRequested(): Array<Address> {
    return this[6].toAddressArray();
  }

  get incentiveAmountsRequested(): Array<BigInt> {
    return this[7].toBigIntArray();
  }
}

export class CancelIPOfferCall extends ethereum.Call {
  get inputs(): CancelIPOfferCall__Inputs {
    return new CancelIPOfferCall__Inputs(this);
  }

  get outputs(): CancelIPOfferCall__Outputs {
    return new CancelIPOfferCall__Outputs(this);
  }
}

export class CancelIPOfferCall__Inputs {
  _call: CancelIPOfferCall;

  constructor(call: CancelIPOfferCall) {
    this._call = call;
  }

  get offerHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CancelIPOfferCall__Outputs {
  _call: CancelIPOfferCall;

  constructor(call: CancelIPOfferCall) {
    this._call = call;
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get weirollWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class Claim1Call extends ethereum.Call {
  get inputs(): Claim1Call__Inputs {
    return new Claim1Call__Inputs(this);
  }

  get outputs(): Claim1Call__Outputs {
    return new Claim1Call__Outputs(this);
  }
}

export class Claim1Call__Inputs {
  _call: Claim1Call;

  constructor(call: Claim1Call) {
    this._call = call;
  }

  get weirollWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get incentiveToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class Claim1Call__Outputs {
  _call: Claim1Call;

  constructor(call: Claim1Call) {
    this._call = call;
  }
}

export class ClaimFeesCall extends ethereum.Call {
  get inputs(): ClaimFeesCall__Inputs {
    return new ClaimFeesCall__Inputs(this);
  }

  get outputs(): ClaimFeesCall__Outputs {
    return new ClaimFeesCall__Outputs(this);
  }
}

export class ClaimFeesCall__Inputs {
  _call: ClaimFeesCall;

  constructor(call: ClaimFeesCall) {
    this._call = call;
  }

  get incentiveToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ClaimFeesCall__Outputs {
  _call: ClaimFeesCall;

  constructor(call: ClaimFeesCall) {
    this._call = call;
  }
}

export class CreateAPOfferCall extends ethereum.Call {
  get inputs(): CreateAPOfferCall__Inputs {
    return new CreateAPOfferCall__Inputs(this);
  }

  get outputs(): CreateAPOfferCall__Outputs {
    return new CreateAPOfferCall__Outputs(this);
  }
}

export class CreateAPOfferCall__Inputs {
  _call: CreateAPOfferCall;

  constructor(call: CreateAPOfferCall) {
    this._call = call;
  }

  get targetMarketHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get fundingVault(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get quantity(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get incentivesRequested(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get incentiveAmountsRequested(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }
}

export class CreateAPOfferCall__Outputs {
  _call: CreateAPOfferCall;

  constructor(call: CreateAPOfferCall) {
    this._call = call;
  }

  get offerHash(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateIPOfferCall extends ethereum.Call {
  get inputs(): CreateIPOfferCall__Inputs {
    return new CreateIPOfferCall__Inputs(this);
  }

  get outputs(): CreateIPOfferCall__Outputs {
    return new CreateIPOfferCall__Outputs(this);
  }
}

export class CreateIPOfferCall__Inputs {
  _call: CreateIPOfferCall;

  constructor(call: CreateIPOfferCall) {
    this._call = call;
  }

  get targetMarketHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get incentivesOffered(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }

  get incentiveAmountsPaid(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class CreateIPOfferCall__Outputs {
  _call: CreateIPOfferCall;

  constructor(call: CreateIPOfferCall) {
    this._call = call;
  }

  get offerHash(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateMarketCall extends ethereum.Call {
  get inputs(): CreateMarketCall__Inputs {
    return new CreateMarketCall__Inputs(this);
  }

  get outputs(): CreateMarketCall__Outputs {
    return new CreateMarketCall__Outputs(this);
  }
}

export class CreateMarketCall__Inputs {
  _call: CreateMarketCall;

  constructor(call: CreateMarketCall) {
    this._call = call;
  }

  get inputToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get lockupTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get frontendFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get depositRecipe(): CreateMarketCallDepositRecipeStruct {
    return changetype<CreateMarketCallDepositRecipeStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }

  get withdrawRecipe(): CreateMarketCallWithdrawRecipeStruct {
    return changetype<CreateMarketCallWithdrawRecipeStruct>(
      this._call.inputValues[4].value.toTuple(),
    );
  }

  get rewardStyle(): i32 {
    return this._call.inputValues[5].value.toI32();
  }
}

export class CreateMarketCall__Outputs {
  _call: CreateMarketCall;

  constructor(call: CreateMarketCall) {
    this._call = call;
  }

  get marketHash(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateMarketCallDepositRecipeStruct extends ethereum.Tuple {
  get weirollCommands(): Array<Bytes> {
    return this[0].toBytesArray();
  }

  get weirollState(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class CreateMarketCallWithdrawRecipeStruct extends ethereum.Tuple {
  get weirollCommands(): Array<Bytes> {
    return this[0].toBytesArray();
  }

  get weirollState(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class ExecuteWithdrawalScriptCall extends ethereum.Call {
  get inputs(): ExecuteWithdrawalScriptCall__Inputs {
    return new ExecuteWithdrawalScriptCall__Inputs(this);
  }

  get outputs(): ExecuteWithdrawalScriptCall__Outputs {
    return new ExecuteWithdrawalScriptCall__Outputs(this);
  }
}

export class ExecuteWithdrawalScriptCall__Inputs {
  _call: ExecuteWithdrawalScriptCall;

  constructor(call: ExecuteWithdrawalScriptCall) {
    this._call = call;
  }

  get weirollWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ExecuteWithdrawalScriptCall__Outputs {
  _call: ExecuteWithdrawalScriptCall;

  constructor(call: ExecuteWithdrawalScriptCall) {
    this._call = call;
  }
}

export class FillAPOffersCall extends ethereum.Call {
  get inputs(): FillAPOffersCall__Inputs {
    return new FillAPOffersCall__Inputs(this);
  }

  get outputs(): FillAPOffersCall__Outputs {
    return new FillAPOffersCall__Outputs(this);
  }
}

export class FillAPOffersCall__Inputs {
  _call: FillAPOffersCall;

  constructor(call: FillAPOffersCall) {
    this._call = call;
  }

  get offers(): Array<FillAPOffersCallOffersStruct> {
    return this._call.inputValues[0].value.toTupleArray<FillAPOffersCallOffersStruct>();
  }

  get fillAmounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get frontendFeeRecipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class FillAPOffersCall__Outputs {
  _call: FillAPOffersCall;

  constructor(call: FillAPOffersCall) {
    this._call = call;
  }
}

export class FillAPOffersCallOffersStruct extends ethereum.Tuple {
  get offerID(): BigInt {
    return this[0].toBigInt();
  }

  get targetMarketHash(): Bytes {
    return this[1].toBytes();
  }

  get ap(): Address {
    return this[2].toAddress();
  }

  get fundingVault(): Address {
    return this[3].toAddress();
  }

  get quantity(): BigInt {
    return this[4].toBigInt();
  }

  get expiry(): BigInt {
    return this[5].toBigInt();
  }

  get incentivesRequested(): Array<Address> {
    return this[6].toAddressArray();
  }

  get incentiveAmountsRequested(): Array<BigInt> {
    return this[7].toBigIntArray();
  }
}

export class FillIPOffersCall extends ethereum.Call {
  get inputs(): FillIPOffersCall__Inputs {
    return new FillIPOffersCall__Inputs(this);
  }

  get outputs(): FillIPOffersCall__Outputs {
    return new FillIPOffersCall__Outputs(this);
  }
}

export class FillIPOffersCall__Inputs {
  _call: FillIPOffersCall;

  constructor(call: FillIPOffersCall) {
    this._call = call;
  }

  get ipOfferHashes(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get fillAmounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get fundingVault(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get frontendFeeRecipient(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class FillIPOffersCall__Outputs {
  _call: FillIPOffersCall;

  constructor(call: FillIPOffersCall) {
    this._call = call;
  }
}

export class ForfeitCall extends ethereum.Call {
  get inputs(): ForfeitCall__Inputs {
    return new ForfeitCall__Inputs(this);
  }

  get outputs(): ForfeitCall__Outputs {
    return new ForfeitCall__Outputs(this);
  }
}

export class ForfeitCall__Inputs {
  _call: ForfeitCall;

  constructor(call: ForfeitCall) {
    this._call = call;
  }

  get weirollWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get executeWithdrawal(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ForfeitCall__Outputs {
  _call: ForfeitCall;

  constructor(call: ForfeitCall) {
    this._call = call;
  }
}

export class SetMinimumFrontendFeeCall extends ethereum.Call {
  get inputs(): SetMinimumFrontendFeeCall__Inputs {
    return new SetMinimumFrontendFeeCall__Inputs(this);
  }

  get outputs(): SetMinimumFrontendFeeCall__Outputs {
    return new SetMinimumFrontendFeeCall__Outputs(this);
  }
}

export class SetMinimumFrontendFeeCall__Inputs {
  _call: SetMinimumFrontendFeeCall;

  constructor(call: SetMinimumFrontendFeeCall) {
    this._call = call;
  }

  get _minimumFrontendFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumFrontendFeeCall__Outputs {
  _call: SetMinimumFrontendFeeCall;

  constructor(call: SetMinimumFrontendFeeCall) {
    this._call = call;
  }
}

export class SetOffersPausedCall extends ethereum.Call {
  get inputs(): SetOffersPausedCall__Inputs {
    return new SetOffersPausedCall__Inputs(this);
  }

  get outputs(): SetOffersPausedCall__Outputs {
    return new SetOffersPausedCall__Outputs(this);
  }
}

export class SetOffersPausedCall__Inputs {
  _call: SetOffersPausedCall;

  constructor(call: SetOffersPausedCall) {
    this._call = call;
  }

  get _offersPaused(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetOffersPausedCall__Outputs {
  _call: SetOffersPausedCall;

  constructor(call: SetOffersPausedCall) {
    this._call = call;
  }
}

export class SetProtocolFeeCall extends ethereum.Call {
  get inputs(): SetProtocolFeeCall__Inputs {
    return new SetProtocolFeeCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeCall__Outputs {
    return new SetProtocolFeeCall__Outputs(this);
  }
}

export class SetProtocolFeeCall__Inputs {
  _call: SetProtocolFeeCall;

  constructor(call: SetProtocolFeeCall) {
    this._call = call;
  }

  get _protocolFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProtocolFeeCall__Outputs {
  _call: SetProtocolFeeCall;

  constructor(call: SetProtocolFeeCall) {
    this._call = call;
  }
}

export class SetProtocolFeeClaimantCall extends ethereum.Call {
  get inputs(): SetProtocolFeeClaimantCall__Inputs {
    return new SetProtocolFeeClaimantCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeClaimantCall__Outputs {
    return new SetProtocolFeeClaimantCall__Outputs(this);
  }
}

export class SetProtocolFeeClaimantCall__Inputs {
  _call: SetProtocolFeeClaimantCall;

  constructor(call: SetProtocolFeeClaimantCall) {
    this._call = call;
  }

  get _protocolFeeClaimant(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetProtocolFeeClaimantCall__Outputs {
  _call: SetProtocolFeeClaimantCall;

  constructor(call: SetProtocolFeeClaimantCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
